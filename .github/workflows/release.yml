name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup .npmrc for GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "@yuelioi:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Install Task
        run: choco install go-task -y

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

      - name: Install NSIS
        run: choco install nsis -y

      - name: Add NSIS to PATH
        run: echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build Windows installer
        run: task package
        env:
          PRODUCTION: "true"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}-installer
          path: bin/*-installer.exe
          retention-days: 5

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - arch: universal
            task: package:universal
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup .npmrc for GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "@yuelioi:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Install Task
        run: brew install go-task

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

      - name: Build macOS app
        run: task package
        env:
          PRODUCTION: "true"

      - name: List bin directory
        run: ls -R bin

      - name: Find the built .app
        id: find_app
        run: |
          APP_PATH=$(find bin -maxdepth 1 -name "*.app" | head -n 1)
          if [ -z "$APP_PATH" ]; then
            echo "Error: .app file not found in bin/"
            exit 1
          fi
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
          echo "Found App: $APP_PATH"

      - name: Remove quarantine attribute
        run: sudo xattr -rd com.apple.quarantine "$APP_PATH"

      - name: Create ZIP of the app
        run: |
          APP_NAME=$(basename "$APP_PATH")
          ZIP_PATH="bin/${APP_NAME%.app}-${{ matrix.arch }}.zip"
          zip -r "$ZIP_PATH" "$APP_PATH"
          sudo xattr -rd com.apple.quarantine "$ZIP_PATH"
          echo "Created zip: $ZIP_PATH"

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}-zip
          path: bin/*.zip
          retention-days: 5

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.exe
            artifacts/**/*.dmg
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
